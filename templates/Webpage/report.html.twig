{% extends 'base.html.twig' %}

{% block title %}Redovisning{% endblock %}

{% block body %}
<div class="two-col-layout aside-left">
    <aside class="aside">
        <article class="article">
            <h2>Kmom - Länkar</h2>
            <ol>
                <li><a href="#kmom01">kmom01</a></li>
                <li><a href="#kmom02">kmom02</a></li>
                <li><a href="#kmom03">kmom03</a></li>
                <li><a href="#kmom04">kmom04</a></li>
                <li><a href="#kmom05">kmom05</a></li>
                <li><a href="#kmom06">kmom06</a></li>
                <li><a href="#kmom10">kmom10</a></li>
            </ol>

            <h2>Kmom01</h2>

            <p>kmom01 är klar</p>

            <h2>Kmom02</h2>

            <p>kmom02 är klar</p>

            <h2>Kmom03</h2>

            <p>kmom03 är inte klar än</p>

            <h2>Kmom04</h2>

            <p>kmom04 är inte klar än</p>

            <h2>Kmom05</h2>

            <p>kmom05 är inte klar än</p>

            <h2>Kmom06</h2>

            <p>kmom06 är inte klar än</p>

            <h2>Projekt uppgift</h2>

            <p>kmom10 är inte klar än</p>
        </article>
    </aside>

    <main class="main">
        <article class="article">
            <header>
                <h1>Redovisning</h1>
                <p class="author">Skriven av en krabba.</p>
            </header>

            <figure class="figure center">
                <a href="{{ path('home') }}">
                    <img src="{{ asset('img/yngre_jag.jpg') }}" style="width: 100%; height: auto;" alt="Bild på mig">
                </a>
            <figcaption>Här kommer min redovisning</figcaption>
            </figure>

            <header>
                <h2 id="kmom01">Kmom01 - Ramverk</h2>
            </header>


            <p>1. Förutom de tidigare kurserna i utbildningen, så har jag inte jobbat med objektorientering inom "webbdesign" </p>
            <p>2. PHP Klasser är i praktiken beskrivningar som används för att skapa objekt. De definierar vilka egenskaper och metoder en objekt kommer att ha. Viktigt att känna till hur man skapar de och ev. objekt, public/private egenskaper, metoderna och hur metoder används, $this, osv.</p>
            <p>3. Jag tyckte att övningen som presenterades kunde ha varit mer omfattande. Jag har det lite svårt att förstå tillämpningar för att använda JSON metoden.</p>
            <p>4. Har inte läst mycket från artikeln. Just frågor om php-s syntax bryr jag mig inte särkilt mycket om nu när jag ligger lite efter med kurserna och försöker förstå principerna bakom de.</p>
            <p>5. Jag har lärt mig grunderna i Symfony.</p>
            <p>6. </p>

            <header>
                <h2 id="kmom02">Kmom02 - Objektorientering</h2>
            </header>

            <p>1. Arv: Man återanvänder kod från en basklass i andra underklasser. Den förenklar kod, och man kan följa upp enklare vad vart man använder viss kod</p>
            <p>1. Komposition: Man bygger mer komplexa objekt/klasser med andra konstruktioner som komponenter. Då blir det enklare att byta ut komponenterna och behålla huvud-konstruktionen.</p>
            <p>1. Interface: Beskriver hur en klass ska agera. Interface för en klass är ungefär vad en klass är för ett objekt, den beskriver funktionalitet och användning </p>
            <p>1. Trait: Struktur som gör det möjligt att återanvända kod & metoder i flera olika icke-nödvändningsvis relaterade klasser utan att använda sig av arv.</p>
            <p>2. Jag gjorde först övningen, sedan försökte koda det själv - lyckades inte alls att få det att funka. Sedan blev det en direkt kopia av övningens kod och omvandla dice-spelet till kort-spelet, få det att funka, och fortsätta därifrån. Det har varit väldigt mycket trial & error. Mycket problem med att få Unicode delen att funka och att grejjerna ska hänga ihop med varandra. Sedan tog det ett bra tag innan jag kom fram till en fungerande kod, mycket pga. syntaxen som jag har en hel del problem med. Att koda i VS Code med Symfony och försöka strukturera koden i egna mappar är lite jobbigt att ha koll med tanke på de många undermapparna.</p>
            <p>2. Jag skulle kunna förbättra länkarna inom kortspelet och själva UX delen/ displayen av kort. Man skulle kanske kunna dela in DECK arrayen i 4 olika och utveckla det vidare för att sortera efter färg med en annan vägning, samt hantera bilder på kort, spara valörer/kort/färg</p>
            <p>3. Än så länge gör vi inte så mycket mer än main (src) + views (templates) + style (assets) i HTML, så det känns snarare väldigt mycket krångligare att använda Symfony för det här, men att kunna hantera & skicka JSON svar på ett annat sätt samt visualisera alla routes känns lättare och har ju sin potential. Skulle dock inte vilja använda det i framtiden</p>
            <p>4. Användning av unicode i array är min TIL</p>
            <p>6. </p>

            <header>
                <h2 id="kmom03">Kmom03 - Applikation</h2>
            </header>

            <p>1. </p>
            <p>2. </p>
            <p>3. </p>
            <p>4. </p>
            <p>5. </p>
            <p>6. </p>

            <h2 id="kmom04">Kmom04 - Enhetstestning</h2>

            <p>1. </p>
            <p>2. </p>
            <p>3. </p>
            <p>4. </p>
            <p>5. </p>
            <p>6. </p>

            <header>
                <h2 id="kmom05">Kmom05 - ORM / Databas</h2>
            </header>

            <p>1. </p>
            <p>2. </p>
            <p>3. </p>
            <p>4. </p>
            <p>5. </p>
            <p>6. </p>

            <header>
                <h2 id="kmom06">Kmom06 - Automatiserad test</h2>
            </header>

            <p>1. </p>
            <p>2. </p>
            <p>3. </p>
            <p>4. </p>
            <p>5. </p>
            <p>6. </p>


            <h2 id="kmom10">kmom10 - Projekt</h2>

                        <p>1. </p>
            <p>2. </p>
            <p>3. </p>
            <p>4. </p>
            <p>5. </p>
            <p>6. </p>

        </article>
    </main>
</div>
{% endblock %}