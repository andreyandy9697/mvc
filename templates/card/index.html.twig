{% extends 'base.html.twig' %}

{% block title %}Kortspel{% endblock %}

{% block body %}
<div class="two-col-layout aside-left">
    <aside class="aside">
        <article class="article">
            <h2>Kortspel</h2>
            <p>Här hittar du alla undersidor för denna uppgift:</p>
            <ul>
                <li><h5><a href="{{ path('card_deck') }}">Visa kortlek</a></h5></li>
                <li><h5><a href="{{ path('card_deck_shuffle') }}">Blanda om kortlek</a></h5></li>
                <li><h5><a href="{{ path('card_deck_draw') }}">Dra ett kort</a></h5></li>
                <li><h5><a href="{{ path('card_deck_deal', {'players':4, 'cards':5}) }}">Dela ut kort</a></h5></li>
                <li><h5><a href="{{ path('session_index') }}">Debugga session</a></h5/li>
            </ul>
        </article>
    </aside>

    <main class="main">
        <article class="article">
            <header>
                <h2>Klasser & Struktur</h2>
                <p>Fyra huvudklasser:</p>
                <ul>
                    <li><strong>Cards</strong>: hanterar ett slumpat värde 1–52.</li>
                    <p></p>
                    <li><strong>CardsGraphic</strong>: ärver Cards, skapar unicode-korten.</li>
                    <li>< Definierar en const DECK array av 52 kort som kan användas.</li>
                    <p></p>
                    <li><strong>CardsHand</strong>: använder CardsGraphic::DECK för att slumpa en hand.</li>
                    <p></p>
                    <li><strong>Deck</strong>: Använder samma CardsGraphic::DECK dock i en kopia i $cards.</li>
                    <li>< Modifierar sedan den kopian. Deck har flera metoder:</li>
                    <li>< shuffle() för att nollställa antal kort och blanda om</li>
                    <li>< draw($n) drar ut de första korten från DECK och returnerar de</li>
                    <li>< Efter dragning sparas $cards i sessionen, och tillåter omstart</li>
                    <li>< från det man sparat eller från början </li>
                </ul>

                <h3>UML-klassdiagram</h3>
                <pre>
+---------------+    +----------------+   +---------------+   +---------------+
|    Cards      |    |  CardsGraphic  |   |   CardsHand   |   |      Deck     |
+---------------+    +----------------+   +---------------+   +---------------+
| - value:int   |<---|   «extends»    |   | - hand:string[]|  | - cards:string[]|
+---------------+    +----------------+   +---------------+   +----------------+
| + draw():int  |    | + getAsString()|   | + draw(count) |<--| + __construct()
| + getValue()  |    +----------------+   | + getString() |   | + fromSession():Deck|
| + getAsString()|                        | + getValues() |   | + shuffle()  |
+---------------+                         +---------------+|  | + draw(count:int):string[] |
                                                              | + count()    |
                                                              | + saveToSession(session):void|
                                                              +---------------+
                </pre>
                <p></p>
            </header>

        </article>
    </main>
</div>

{% endblock %}
